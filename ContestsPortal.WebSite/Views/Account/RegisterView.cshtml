@using System.Web.Optimization
@using ContestsPortal.Domain.Models
@model ContestsPortal.WebSite.ViewModels.Account.RegisterViewModel

@{
    ViewBag.Title = "Регистрация";
    Layout = "~/Views/_Layout.cshtml";
    var list = (List<Country>) ViewBag.Countries;
}
<h2>Регистрация нового пользователя</h2>
@section styles {
    <link rel="stylesheet" href="@Url.Content("~/content/styles/validation.css")" />
    <link rel="stylesheet" href="@Url.Content("~/content/themes/base/all.css")" />
<link rel="stylesheet" href="@Url.Content("~/content/styles/forms.css")" />
}
@section scripts
{   
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("~/Scripts/recaptchamethods.js")"></script>
    <script src="https://www.google.com/recaptcha/api.js?onload=callback&render=explicit" async defer></script>
    }
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
       <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NickName, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.NickName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.NickName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MiddleName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new {htmlAttributes = new {@class = "form-control", id = "datepicker"}})
                @Html.ValidationMessageFor(model => model.BirthDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <table>
                    <tr>
                        <td>@Html.EditorFor(model => model.ContestNotificationsEnabled)</td>
                        <td class="boolflag">@Html.LabelFor(model => model.ContestNotificationsEnabled, new {@class = "control-label col-md-2"})</td>
                    </tr>
                </table>
                
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.CountryId, new {@class = "control-label col-md-2"}):
                @Html.DropDownListFor(x => x.CountryId, new SelectList(list, "CountryId", "CountryName", list.First()), "Выберите страну", null) 
                @Html.ValidationMessageFor(model => model.CountryId, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.HomePage, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.HomePage, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.HomePage, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AboutYourself, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AboutYourself, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AboutYourself, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordConfirmation, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.PasswordFor(model => model.PasswordConfirmation, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PasswordConfirmation, "", new {@class = "text-danger"})
            </div>
        </div>
       
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <p>Пожалуйста, подтвердите, что вы не робот:</p>
            <div id="captcha"></div>
            @Html.ValidationMessageFor(x=>x.Recaptcha,"",new {@class = "text-danger", id="recaptchaerror"})
        </div>
    </div>
<input type="submit" value="Зарегистировать" class="btn btn-default" />
        
       
}