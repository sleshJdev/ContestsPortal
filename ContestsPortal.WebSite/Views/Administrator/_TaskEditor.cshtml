@using System.Web.Mvc.Html
@model ContestsPortal.WebSite.ViewModels.Administrator.TaskEditorViewModel
@{
    ViewBag.Title = "Подробности задачи";
    
    Layout = null;
    if(ViewBag.IsUseLayout != null)
    {
        Layout = "~/Views/_Layout.cshtml";
    }
}

<fieldset class="form-horizontal smart-green">
    <legend>Подробности задачи</legend>    
    <div class="form-group">
        <label class = "control-label col-md-4">Используемые языки:</label>
        <div class="row col-md-8">
            <ul class="list-inline">             
                    @{
                        for (int i = 0; i < Model.Languages.Count; i++)
                        {
                            <li>
                                <input type="radio" name="Languages[@i]" value="@(Model.Languages[i].IsSelected)" />
                                <span>@(Model.Languages[i].LanguageName)</span>     
                            </li>              
                         }
                    }
            </ul>
        </div><!-- /.row -->
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.TaskComplexity, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TaskComplexity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaskComplexity, "", new { @class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaskDuration, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TaskDuration, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.TaskDuration, "", new { @class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaskAward, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TaskAward, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.TaskAward, "", new { @class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaskTitle, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TaskTitle, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.TaskTitle, "", new { @class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaskContent, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TaskContent, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.TaskContent, "", new { @class = "text-danger", style="display:inline-block;"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaskComment, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TaskComment, new { htmlAttributes = new { @class = "form-control"/*, form = "contestForm"*/ } })
            @Html.ValidationMessageFor(model => model.TaskComment, "", new { @class = "text-danger", style = "display:inline-block;" })
        </div>
    </div>
</fieldset>